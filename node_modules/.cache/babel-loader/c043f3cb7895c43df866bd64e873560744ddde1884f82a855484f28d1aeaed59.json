{"ast":null,"code":"var _jsxFileName = \"/Users/olhaslipushchenko/my-app-tutorial/src/components/Costs/CostsDiagram.js\";\nimport Diagram from \"./Diagram\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CostsDiagram = props => {\n  const diagramDataSets = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  for (const cost of props.costs) {\n    const costMonth = cost.date.getMonth();\n    diagramDataSets[costMonth].value += cost.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Diagram, {\n    dataSets: diagramDataSets\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_c = CostsDiagram;\nexport default CostsDiagram;\nvar _c;\n$RefreshReg$(_c, \"CostsDiagram\");","map":{"version":3,"names":["Diagram","CostsDiagram","props","diagramDataSets","label","value","cost","costs","costMonth","date","getMonth","amount"],"sources":["/Users/olhaslipushchenko/my-app-tutorial/src/components/Costs/CostsDiagram.js"],"sourcesContent":["import Diagram from \"./Diagram\";\n\nconst CostsDiagram = (props) => {\n  const diagramDataSets = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const cost of props.costs) {\n    const costMonth = cost.date.getMonth();\n    diagramDataSets[costMonth].value += cost.amount;\n  }\n  return <Diagram dataSets={diagramDataSets} />;\n};\nexport default CostsDiagram;\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAAC;AAEhC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC3B;EAED,KAAK,MAAMC,IAAI,IAAIJ,KAAK,CAACK,KAAK,EAAE;IAC9B,MAAMC,SAAS,GAAGF,IAAI,CAACG,IAAI,CAACC,QAAQ,EAAE;IACtCP,eAAe,CAACK,SAAS,CAAC,CAACH,KAAK,IAAIC,IAAI,CAACK,MAAM;EACjD;EACA,oBAAO,QAAC,OAAO;IAAC,QAAQ,EAAER;EAAgB;IAAA;IAAA;IAAA;EAAA,QAAG;AAC/C,CAAC;AAAC,KArBIF,YAAY;AAsBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}